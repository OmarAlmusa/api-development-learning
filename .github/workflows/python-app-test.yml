# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      image: postgres

      env:
        database_hostname: ${{api-dev-env.DATABASE_HOSTNAME}}
        database_password: ${{api-dev-env.DATABASE_PASSWORD}}
        database_user: ${{api-dev-env.DATABASE_USER}}
        database_name: ${{api-dev-env.DATABASE_NAME}}
        database_port: ${{api-dev-env.DATABASE_PORT}}
        secret_key: ${{api-dev-env.SECRET_KEY}}
        algorithm: ${{api-dev-env.ALGORITHM}}
        access_token_expire_minutes: ${{api-dev-env.ACCESS_TOKEN_EXPIRE_MINUTES}}

      options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12.2
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.2"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
